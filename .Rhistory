lwr <- 0 + (1 - ci)/2
upr <- 1 - (1 - ci)/2
# Get values for each burst
apply(last_day, 1, quantile, lwr)
lwr
# Get values for each burst
indiv$pr_succ_lwr <- apply(last_day, 1, quantile, lwr)
indiv$pr_succ_mean <- apply(last_day, 1, mean)
indiv$pr_succ_upr <- apply(last_day, 1, quantile, upr)
indiv
# Latest day that a nest survived to
latest_day <- apply(z, c(1, 3, 4), sum)
# Get values for each burst
indiv$last_day_lwr <- apply(latest_day, 1, quantile, lwr)
indiv$last_day_mean <- apply(latest_day, 1, mean)
indiv$last_day_upr <- apply(latest_day, 1, quantile, upr)
indiv
wost_outcomes$model
?grep
regexpr("p_time", "phi_time_p_time")
grep("p_time", "phi_time_p_time")
grep("p_time", "phi_time")
grepl("p_time", "phi_time")
grepl("p_time", "phi_time_p_time")
# Initialize list for output
out <- list()
str(wost_outcomes)
library(nestR)
wost_outcomes <- estimate_outcomes(fixes = wost_attempts$fixes,
visits = wost_attempts$visits,
model = "p_time")
# Plot population-level daily survival
plot_survival(wost_outcomes)
# Plot population-level detection
plot_detection(wost_outcomes)
# Plot estimated survival for burst 1
plot_nest_surv(wost_outcomes, who = 1)
# Plot estimated survival for burst 2
plot_nest_surv(wost_outcomes, who = 2)
# Plot estimated survival for burst 3
plot_nest_surv(wost_outcomes, who = 3)
summarize_outcomes(wost_outcomes, ci = 0.95)
wost_outcomes$phi
wost_outcomes$phi
str(wost_outcomes$phi)
library(nestR)
summarize_outcomes(wost_outcomes, ci = 0.95)
library(nestR)
summarize_outcomes(wost_outcomes, ci = 0.95)
wost_outcomes <- estimate_outcomes(fixes = wost_attempts$fixes,
visits = wost_attempts$visits,
model = "null")
# Plot population-level daily survival
plot_survival(wost_outcomes)
# Plot population-level detection
plot_detection(wost_outcomes)
# Plot estimated survival for burst 1
plot_nest_surv(wost_outcomes, who = 1)
# Plot estimated survival for burst 2
plot_nest_surv(wost_outcomes, who = 2)
# Plot estimated survival for burst 3
plot_nest_surv(wost_outcomes, who = 3)
summarize_outcomes(wost_outcomes, ci = 0.95)
wost_outcomes <- estimate_outcomes(fixes = wost_attempts$fixes,
visits = wost_attempts$visits,
model = "phi_time_p_time")
# Plot population-level daily survival
plot_survival(wost_outcomes)
# Plot population-level detection
plot_detection(wost_outcomes)
# Plot estimated survival for burst 1
plot_nest_surv(wost_outcomes, who = 1)
# Plot estimated survival for burst 2
plot_nest_surv(wost_outcomes, who = 2)
# Plot estimated survival for burst 3
plot_nest_surv(wost_outcomes, who = 3)
str(wost_outcomes)
summarize_outcomes(wost_outcomes, ci = 0.95)
wost_outcomes <- estimate_outcomes(fixes = wost_attempts$fixes,
visits = wost_attempts$visits,
model = "p_time")
# Plot population-level daily survival
plot_survival(wost_outcomes)
# Plot population-level detection
plot_detection(wost_outcomes)
# Plot estimated survival for burst 1
plot_nest_surv(wost_outcomes, who = 1)
# Plot estimated survival for burst 2
plot_nest_surv(wost_outcomes, who = 2)
# Plot estimated survival for burst 3
plot_nest_surv(wost_outcomes, who = 3)
str(wost_outcomes)
summarize_outcomes(wost_outcomes, ci = 0.95)
wost_outcomes <- estimate_outcomes(fixes = wost_attempts$fixes,
visits = wost_attempts$visits,
model = "p_time")
str(wost_outcomes)
usethis::use_data(wost_outcomes)
usethis::use_data(wost_outcomes, overwrite = TRUE)
data(wost_outcomes)
str(wost_outcomes)
library(nestR)
library(readr)
library(dplyr)
# Load dataset of Kestrel data
kestrels_raw <- read.csv("~/Documents/PhD/Research/Wood Stork/WOST_repo/nesting/output/LEKE/LEKE_nesters.csv",
stringsAsFactors = FALSE)
# Keep columns of interest and rename
kestrels_raw <- kestrels_raw %>%
select(burst, date, long, lat) %>%
as_tibble()
# Load dataset of Gull data
gulls_raw <- read_csv("~/Documents/PhD/Research/Wood Stork/WOST_repo/nesting/output/MEGU/MEGU_nesters.csv")
# Keep columns of interest and rename
gulls_raw <- gulls_raw %>%
select(burst, date, long, lat)
# Create example dataset for Gulls
gulls <- gulls_raw %>%
filter(burst %in% c("URI29-2016", "URI05-2016")) %>%
as.data.frame()
usethis::use_data(gulls, overwrite = TRUE)
gc()
mg_output_1 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
library(nestR)
mg_output_1 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
usethis::use_data(mg_output_1, overwrite = TRUE)
mg_output_1
mg_output_1$nests
gc()
# Load dataset of Gull data
gulls_raw <- read_csv("~/Documents/PhD/Research/Wood Stork/WOST_repo/nesting/output/MEGU/MEGU_nesters.csv")
# Keep columns of interest and rename
gulls_raw <- gulls_raw %>%
select(burst, date, long, lat)
# Create example dataset for Gulls
gulls <- gulls_raw %>%
filter(burst %in% c("URI30-2016", "URI05-2016")) %>%
as.data.frame()
usethis::use_data(gulls, overwrite = TRUE)
gc()
library(nestR)
mg_output_1 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
mg_output_1$nests
gc()
library(readr)
library(dplyr)
# Load dataset of Gull data
gulls_raw <- read_csv("~/Documents/PhD/Research/Wood Stork/WOST_repo/nesting/output/MEGU/MEGU_nesters.csv")
# Keep columns of interest and rename
gulls_raw <- gulls_raw %>%
select(burst, date, long, lat)
# Create example dataset for Gulls
gulls <- gulls_raw %>%
filter(burst %in% c("URI29-2016", "URI05-2016")) %>%
as.data.frame()
usethis::use_data(gulls, overwrite = TRUE)
gc()
mg_output_1 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
library(nestR)
library(nestR)
mg_output_1 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
mg_output_1$nests
usethis::use_data(mg_output_1, overwrite = TRUE)
gc()
# Load dataset of Kestrel data
kestrels_raw <- read.csv("~/Documents/PhD/Research/Wood Stork/WOST_repo/nesting/output/LEKE/LEKE_nesters.csv",
stringsAsFactors = FALSE)
# Keep columns of interest and rename
kestrels_raw <- kestrels_raw %>%
select(burst, date, long, lat) %>%
as_tibble()
explore_nests(kestrels_raw)
explore_nests(kestrels_raw)
# Create example dataset for Kestrels
kestrels <- kestrels_raw %>%
filter(burst %in% c("16680-2017", "16557-2016")) %>%
as.data.frame()
unique(kestrel$burst)
unique(kestrels$burst)
# Create example dataset for Kestrels
kestrels <- kestrels_raw %>%
filter(burst %in% c("16680-2017", "16557-2017")) %>%
as.data.frame()
unique(kestrels$burst)
usethis::use_data(kestrels, overwrite = TRUE)
lk_output_1 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
lk_output_1$nests
usethis::use_data(lk_output_1, overwrite = TRUE)
data(lk_output_1)
lk_output_1
lk_output_1$nests
lk_known_nests <- data.frame(burst = c("16682-2017", "16680-2017"),
long = c(16.416639, 16.552077),
lat = c(40.817021, 40.828485))
usethis::use_data(lk_known_nests, overwrite = TRUE)
# Load dataset of Kestrel data
kestrels_raw <- read.csv("~/Documents/PhD/Research/Wood Stork/WOST_repo/nesting/output/LEKE/LEKE_nesters.csv",
stringsAsFactors = FALSE)
# Keep columns of interest and rename
kestrels_raw <- kestrels_raw %>%
select(burst, date, long, lat) %>%
as_tibble()
library(readr)
library(dplyr)
# Keep columns of interest and rename
kestrels_raw <- kestrels_raw %>%
select(burst, date, long, lat) %>%
as_tibble()
# Create example dataset for Kestrels
kestrels <- kestrels_raw %>%
filter(burst %in% c("16682-2017", "16680-2017")) %>%
as.data.frame()
usethis::use_data(kestrels, overwrite = TRUE)
lk_output_1 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
usethis::use_data(lk_output_1, overwrite = TRUE)
library(nestR)
lk_output_1 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
usethis::use_data(lk_output_1, overwrite = TRUE)
library(nestR)
mg_output_2 <- find_nests(gps_data = gulls,
sea_start = "03-31",
sea_end = "09-30",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 10,
min_top_att = 80,
min_days_att = 90,
discard_overlapping = TRUE)
mg_output_2 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 60,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 10,
min_top_att = 80,
min_days_att = 90,
discard_overlapping = TRUE)
usethis::use_data(mg_output_2, overwrite = TRUE)
mg_output_2$nests
mg_nests <- mg_output_2
mg_attempts <- format_attempts(nest_info = mg_nests, nest_cycle = 45)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "null")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "p_time")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "phi_time")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "phi_time_p_time")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
mg_attempts <- format_attempts(nest_info = mg_nests, nest_cycle = 40)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "p_time")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "phi_time_p_time")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "p_time")
plot_survival(mg_outcomes)
plot_detection(mg_outcomes)
plot_nest_surv(mg_outcomes, who = 1)
plot_nest_surv(mg_outcomes, who = 2)
data(lk_output_2)
library(nestR)
lk_nests <- lk_output_2
lk_attempts <- format_attempts(nest_info = lk_nests, nest_cycle = 45)
lk_outcomes <- estimate_outcomes(fixes = lk_attempts$fixes,
visits = lk_attempts$visits,
model = "null")
usethis::use_data(lk_outcomes, overwrite = TRUE)
mg_nests <- mg_output_2
mg_attempts <- format_attempts(nest_info = mg_nests, nest_cycle = 40)
mg_outcomes <- estimate_outcomes(fixes = mg_attempts$fixes,
visits = mg_attempts$visits,
model = "p_time")
usethis::use_data(mg_outcomes, overwrite = TRUE)
library(nestR)
table(lk_output_1$nests$burst)
unique(kestrels$burst)
lk_output_2
lk_outcomes <- estimate_outcomes(fixes = lk_attempts$fixes,
visits = lk_attempts$visits,
model = "phi_time_p_time")
plot_survival(lk_outcomes)
plot_detection(lk_outcomes)
unique(mg_output_1$nests$burst)
library(nestR)
lk_outcomes <- estimate_outcomes(fixes = lk_attempts$fixes,
visits = lk_attempts$visits,
model = "p_time")
usethis::use_data(lk_outcomes, overwrite = TRUE)
summarize_outcomes(wost_outcomes, ci = 0.95)
library(nestR)
library(nestR)
par(mfrow(2, 1))
plot_survival(lk_outcomes)
plot_detection(lk_outcomes)
par(mfrow=c(2, 1))
plot_survival(lk_outcomes)
plot_detection(lk_outcomes)
grid.arrange(plot_survival(lk_outcomes), plot_detection(lk_outcomes), ncol = 2)
ggplot2::grid.arrange(plot_survival(lk_outcomes), plot_detection(lk_outcomes), ncol = 2)
gridExtra::grid.arrange(plot_survival(lk_outcomes), plot_detection(lk_outcomes), ncol = 2)
gc()
lk_output_1 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 45,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
usethis::use_data(lk_output_1, overwrite = TRUE)
lk_output_2 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 45,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 6,
min_top_att = 70,
min_days_att = 65,
discard_overlapping = TRUE)
usethis::use_data(lk_output_2, overwrite = TRUE)
mg_output_1 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 40,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
usethis::use_data(mg_output_1, overwrite = TRUE)
gc()
mg_output_2 <- find_nests(gps_data = gulls,
sea_start = "04-15",
sea_end = "08-01",
nest_cycle = 40,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 10,
min_top_att = 80,
min_days_att = 90,
discard_overlapping = TRUE)
usethis::use_data(mg_output_2, overwrite = TRUE)
gc()
lk_output_1 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 35,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 2,
min_top_att = 1,
min_days_att = 1,
discard_overlapping = FALSE)
usethis::use_data(lk_output_1, overwrite = TRUE)
lk_output_2 <- find_nests(gps_data = kestrels,
sea_start = "03-31",
sea_end = "08-31",
nest_cycle = 35,
buffer = 40,
min_pts = 2,
min_d_fix = 15,
min_consec = 6,
min_top_att = 70,
min_days_att = 65,
discard_overlapping = TRUE)
usethis::use_data(lk_output_2, overwrite = TRUE)
lk_nests <- lk_output_2
lk_attempts <- format_attempts(nest_info = lk_nests, nest_cycle = 35)
lk_outcomes <- estimate_outcomes(fixes = lk_attempts$fixes,
visits = lk_attempts$visits,
model = "p_time")
usethis::use_data(lk_outcomes, overwrite = TRUE)
lk_outcomes <- estimate_outcomes(fixes = lk_attempts$fixes,
visits = lk_attempts$visits,
model = "null")
usethis::use_data(lk_outcomes, overwrite = TRUE)
library(nestR)
lk_output_2$nests
2017-06-16
2017-06-16 + 50
as_date(2017-06-16) + 50
ymd(2017-06-16) + 50
ymd("2017-06-16") + days(50)
mg_output_2$nests
ymd("2017-06-16") + days(30)
ymd("2016-05-18") + days(20)
library(nestR)
